<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd" default-autowire="byName">

    <bean id="placeholderConfig"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">  
            <list>
                <value>file:${outreach-app-config}</value>
            </list>
        </property>
    </bean>
    
    <context:annotation-config />
<!--depends-on="liquibase"-->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" >
        <!--<property name="persistenceUnitName" value="outreach-pu-01"/>-->
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false" />
                <property name="databasePlatform" value="${org.hibernate.dialect}" />
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <map>                               
                <entry key="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory"/>
            </map>
        </property>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--<property name="initialPoolSize" value="${jdbc.connection.initialPoolSize}"/>-->
        <property name="acquireIncrement" value="${jdbc.connection.acquireIncrement}"/>
        <property name="minPoolSize" value="${jdbc.connection.minPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.connection.maxPoolSize}"/>        
        <!--<property name="idleConnectionTestPeriod" value="${jdbc.connection.idleConnectionTestPeriod}"/>-->
        <property name="maxIdleTime" value="${jdbc.connection.maxIdleTime}"/>                        
    </bean>

<!--    <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
        <property name="dataSource" ref="dataSource" />
        <property name="changeLog" value="classpath:/META-INF/liquibase/db.changelog-master.xml" />
    </bean>-->
    
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    <tx:annotation-driven/>
    <bean id="appConfigBean" class="com.innoppl.outreach.data.AppConfigBean">
        <property name="cdnBaseUrl">
            <value>${default.cdn.url.root}</value>
        </property>
        <property name="cdnOriginDir">
            <value>${default.cdn.origin.dir}</value>
        </property>
        <property name="domainVerifier">
            <value>${domainVerifier}</value>
        </property>
        <property name="smtpHost">
            <value>${smtp.host}</value>
        </property>
        <property name="smtpPort">
            <value>${smtp.port}</value>
        </property>
        <property name="smtpSSLEnabled">
            <value>${smtp.use.ssl}</value>
        </property>
        <property name="smtpUserName">
            <value>${smtp.username}</value>
        </property>
        <property name="smtpPassword">
            <value>${smtp.password}</value>
        </property>        
        <property name="emailFrom">
            <value>${email.from}</value>
        </property>
    </bean>
</beans>
